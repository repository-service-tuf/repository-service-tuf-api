{
    "openapi": "3.0.0",
    "info": {
        "title": "Repository Service for TUF API",
        "description": "Repository Service for TUF Rest API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/bootstrap/": {
            "get": {
                "tags": [
                    "Bootstrap"
                ],
                "summary": "Check the bootstrap status.",
                "description": "Check if the bootstrap of the system is done or not.",
                "operationId": "get_api_v1_bootstrap__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BootstrapGetResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Bootstrap"
                ],
                "summary": "Post a task to bootstrap the system with initial signed Metadata.",
                "description": "Submit an asynchronous task to initialize the TUF Repository with initial signed Metadata and Settings. Use the task ID to retrieve the task status in the endpoint /api/v1/task.",
                "operationId": "post_api_v1_bootstrap__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BootstrapPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BootstrapPostResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/config/": {
            "get": {
                "tags": [
                    "Config"
                ],
                "summary": "List settings.",
                "description": "Returns the configuration settings",
                "operationId": "get_api_v1_config__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Config"
                ],
                "summary": "Put a task to update settings.",
                "description": "Submit an asynchronous task to update configuration settings. Use the task ID to retrieve the task status in the endpoint /api/v1/task.",
                "operationId": "put_api_v1_config__put",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PutResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/": {
            "post": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Post a task to rotate role metadata.",
                "description": "Submit an asynchronous task to rotate a role metadata that requires offline signing. Use the task ID to retrieve the task status in the endpoint /api/v1/task.",
                "operationId": "post_api_v1_metadata__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetadataPostPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetadataPostResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/online": {
            "post": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Force a new version of online metadata role(s).",
                "description": "Force a new version of online metadata role(s). If the roles list is empty all roles will be updated. The new metadata version(s) will have extended expiration which will equal to: today + ROLE_NAME_EXPIRATION number of days, where ROLE_NAME_EXPIRATION is a tuf repository setting. Note: depending on which metadata role you want to update other online roles will likely be updated as well otherwise consistency will be lost.",
                "operationId": "post_online_api_v1_metadata_online_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetadataOnlinePostPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetadataOnlinePostResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/sign": {
            "get": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Get all metadata roles pending signatures together with their latest trusted versions.",
                "description": "Get all metadata roles that need more signatures before they can be used and their corresponding latest trusted versions.",
                "operationId": "get_sign_api_v1_metadata_sign_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetadataSignGetResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Post a task to add a signature for a metadata role.",
                "description": "Submit an asynchronous task to add a signature for a metadata role. Use the task ID to retrieve the task status in the endpoint /api/v1/task.",
                "operationId": "post_sign_api_v1_metadata_sign_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetadataSignPostPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetadataPostResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/sign/delete": {
            "post": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Post a task to delete role metadata in signing process.",
                "description": "Submit an asynchronous task to delete role metadata in signing process. Check the status and result using the task ID and the `get task state` endpoint.",
                "operationId": "post_delete_sign_api_v1_metadata_sign_delete_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetadataSignDeletePayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetadataSignDeleteResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/delegations/": {
            "put": {
                "tags": [
                    "Delegations"
                ],
                "summary": "Put a task to update delegation(s).",
                "description": "Submit an asynchronous task to update delegation(s). Use the task ID to retrieve the task status in the endpoint /api/v1/task.",
                "operationId": "put_delegation_api_v1_delegations__put",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetadataDelegationsPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DelegationsResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Delegations"
                ],
                "summary": "Post a task to create a new delegation.",
                "description": "Submit an asynchronous task to create a new delegation. Use the task ID to retrieve the task status in the endpoint /api/v1/task.",
                "operationId": "post_delegation_api_v1_delegations__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetadataDelegationsPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DelegationsResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/delegations/delete": {
            "post": {
                "tags": [
                    "Delegations"
                ],
                "summary": "Post a task to create a delete delegation.",
                "description": "Submit an asynchronous task to delete delegation. Use the task ID to retrieve the task status in the endpoint /api/v1/task.",
                "operationId": "delete_delegation_api_v1_delegations_delete_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetadataDelegationDeletePayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DelegationsResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/artifacts/": {
            "post": {
                "tags": [
                    "Artifacts"
                ],
                "summary": "Post a task to add artifacts to Metadata.",
                "description": "Submit an asynchronous task to add artifacts to Metadata. Use the task ID to retrieve the task status in the endpoint /api/v1/task.",
                "operationId": "post_api_v1_artifacts__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsePostAdd"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/artifacts/delete": {
            "post": {
                "tags": [
                    "Artifacts"
                ],
                "summary": "Post a task to remove artifacts from Metadata.",
                "description": "Submit an asynchronous task to remove artifacts from Metadata. Use the task ID to retrieve the task status in the endpoint /api/v1/task.",
                "operationId": "post_delete_api_v1_artifacts_delete_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeletePayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsePostDelete"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/artifacts/publish/": {
            "post": {
                "tags": [
                    "Artifacts"
                ],
                "summary": "Post a task to publish artifacts.",
                "description": "Submit an asynchronous task to publish artifacts not yet published from the RSTUF Database. Use the task ID to retrieve the task status in the endpoint /api/v1/task.",
                "operationId": "post_publish_artifacts_api_v1_artifacts_publish__post",
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsePostPublish"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/api/v1/task/": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get task state.",
                "description": "Get RSTUF tasks information.",
                "operationId": "get_api_v1_task__get",
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Response"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AddPayload": {
                "properties": {
                    "artifacts": {
                        "items": {
                            "$ref": "#/components/schemas/Artifact"
                        },
                        "type": "array",
                        "title": "Artifacts"
                    },
                    "add_task_id_to_custom": {
                        "type": "boolean",
                        "title": "Add Task Id To Custom",
                        "description": "Whether to add the id of the task in custom",
                        "default": false
                    },
                    "publish_artifacts": {
                        "type": "boolean",
                        "title": "Publish Artifacts",
                        "description": "Whether to publish the artifacts",
                        "default": true
                    }
                },
                "type": "object",
                "required": [
                    "artifacts"
                ],
                "title": "AddPayload",
                "description": "POST method required Payload.",
                "example": {
                    "artifacts": [
                        {
                            "info": {
                                "custom": {
                                    "key": "value"
                                },
                                "hashes": {
                                    "blake2b-256": "716f6e863f744b9ac22c97ec7b76ea5f5908bc5b2f67c61510bfc4751384ea7a"
                                },
                                "length": 11342
                            },
                            "path": "file1.tar.gz"
                        },
                        {
                            "info": {
                                "hashes": {
                                    "blake2b-256": "69217a3079908094e11121d042354a7c1f55b6482ca1a51e1b250dfd1ed0eef9"
                                },
                                "length": 630
                            },
                            "path": "file2.tar.gz"
                        },
                        {
                            "info": {
                                "hashes": {
                                    "sha256": "452ce8308500d83ef44248d8e6062359211992fd837ea9e370e561efb1a4ca99",
                                    "sha512": "052b49a21e03606b28942db69aa597530fe52d47ee3d748ba65afcd14b857738e36bc1714c4f4adde46c3e683548552fe5c96722e0e0da3acd9050c2524902d8"
                                },
                                "length": 39
                            },
                            "path": "file3.tar.gz"
                        }
                    ]
                }
            },
            "Artifact": {
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/ArtifactInfo"
                    },
                    "path": {
                        "type": "string",
                        "title": "Path"
                    }
                },
                "type": "object",
                "required": [
                    "info",
                    "path"
                ],
                "title": "Artifact"
            },
            "ArtifactInfo": {
                "properties": {
                    "length": {
                        "type": "integer",
                        "title": "Length"
                    },
                    "hashes": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Hashes",
                        "description": "The key(s) must be compatible with the algorithm(s) supported by a TUF client"
                    },
                    "custom": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Custom"
                    }
                },
                "type": "object",
                "required": [
                    "length",
                    "hashes"
                ],
                "title": "ArtifactInfo"
            },
            "BinsRole": {
                "properties": {
                    "expiration": {
                        "type": "integer",
                        "exclusiveMinimum": 0.0,
                        "title": "Expiration"
                    },
                    "number_of_delegated_bins": {
                        "type": "integer",
                        "exclusiveMaximum": 16385.0,
                        "exclusiveMinimum": 1.0,
                        "title": "Number Of Delegated Bins"
                    }
                },
                "type": "object",
                "required": [
                    "expiration",
                    "number_of_delegated_bins"
                ],
                "title": "BinsRole"
            },
            "BootstrapGetResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/GetData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "BootstrapGetResponse",
                "example": {
                    "data": {
                        "bootstrap": false
                    },
                    "message": "System available for bootstrap."
                }
            },
            "BootstrapPayload": {
                "properties": {
                    "settings": {
                        "$ref": "#/components/schemas/repository_service_tuf_api__bootstrap__Settings"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TUFMetadata-Input"
                        },
                        "type": "object",
                        "title": "Metadata"
                    },
                    "timeout": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Timeout",
                        "description": "Timeout in seconds",
                        "default": 300
                    }
                },
                "type": "object",
                "required": [
                    "settings",
                    "metadata"
                ],
                "title": "BootstrapPayload",
                "example": {
                    "metadata": {
                        "root": {
                            "signatures": [
                                {
                                    "keyid": "c6d8bf2e4f48b41ac2ce8eca21415ca8ef68c133b47fc33df03d4070a7e1e9cc",
                                    "sig": "828a659bc34972504b9dab16bc44818b8a7d49ffee2a9021df6a6be4dd3b7a026d1f890b952303d1cf32dda90fbdf60e9fcfeb5f0af6498f0f55cad31c750a02"
                                },
                                {
                                    "keyid": "50d7e110ad65f3b2dba5c3cfc8c5ca259be9774cc26be3410044ffd4be3aa5f3",
                                    "sig": "3045022100bcce9491bd23530674a014c4af202f59047de039ab8dee0bf177220b7c045c52022017d74c26be9d525ab65a81403e48fa826a1f6c79db910a601c524e8228f61df9"
                                }
                            ],
                            "signed": {
                                "_type": "root",
                                "consistent_snapshot": true,
                                "expires": "2025-12-31T23:59:59Z",
                                "keys": {
                                    "0d9d3d4bad91c455bc03921daa95774576b86625ac45570d0cac025b08e65043": {
                                        "keytype": "rsa",
                                        "keyval": {
                                            "public": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwJNtmJy0bky0VZHhJoVw\nVR0oIto8ndLLicnaHPDUfFsv2dTP50uLiYuYhU/RLTh+PIMm9dU5gvfSQ0YIUFHO\nfdcDCBaMNYR9z9c9kvWkfgxP4H7cMdy9ev3yh4pL+ua64AT1598QxmF0RSp9p8P4\nUDPJC4XsgVz3kKeCSQAgz02MJ+KdHyTDP+rgOuWQfVL8bz53puMSSFojiaEJTmZQ\n7eBnI2n6UF6AAV6eo6Dc4cgPQLSjhDqcfoHCyk/AzpTQO5EV+ahofYmV/kQQtr7g\nz8MQXoKRwCbfIcWhPyfPNReOo7fqVK3uK3kkD1ouoNSr9DFRcnUbsX4QR/CQLcoP\nXwIDAQAB\n-----END PUBLIC KEY-----\n"
                                        },
                                        "scheme": "rsassa-pss-sha256",
                                        "x-rstuf-key-name": "Online Key",
                                        "x-rstuf-online-key-uri": "fn:0d9d3d4bad91c455bc03921daa95774576b86625ac45570d0cac025b08e65043"
                                    },
                                    "50d7e110ad65f3b2dba5c3cfc8c5ca259be9774cc26be3410044ffd4be3aa5f3": {
                                        "keytype": "ecdsa",
                                        "keyval": {
                                            "public": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEcLYSZyFGeKdWNt5dWFbnv6N9NyHC\noUNLcG6GZIxLwN8Q8MUdHdOOxGkDnyBRSJpIZ/r/oDECSTwfCYhdogweLA==\n-----END PUBLIC KEY-----\n"
                                        },
                                        "scheme": "ecdsa-sha2-nistp256",
                                        "x-rstuf-key-name": "JanisJoplin's Key"
                                    },
                                    "c6d8bf2e4f48b41ac2ce8eca21415ca8ef68c133b47fc33df03d4070a7e1e9cc": {
                                        "keytype": "ed25519",
                                        "keyval": {
                                            "public": "4f66dabebcf30628963786001984c0b75c175cdcf3bc4855933a2628f0cd0a0f"
                                        },
                                        "scheme": "ed25519",
                                        "x-rstuf-key-name": "JimiHendrix's Key"
                                    }
                                },
                                "roles": {
                                    "root": {
                                        "keyids": [
                                            "c6d8bf2e4f48b41ac2ce8eca21415ca8ef68c133b47fc33df03d4070a7e1e9cc",
                                            "50d7e110ad65f3b2dba5c3cfc8c5ca259be9774cc26be3410044ffd4be3aa5f3"
                                        ],
                                        "threshold": 2
                                    },
                                    "snapshot": {
                                        "keyids": [
                                            "0d9d3d4bad91c455bc03921daa95774576b86625ac45570d0cac025b08e65043"
                                        ],
                                        "threshold": 1
                                    },
                                    "targets": {
                                        "keyids": [
                                            "0d9d3d4bad91c455bc03921daa95774576b86625ac45570d0cac025b08e65043"
                                        ],
                                        "threshold": 1
                                    },
                                    "timestamp": {
                                        "keyids": [
                                            "0d9d3d4bad91c455bc03921daa95774576b86625ac45570d0cac025b08e65043"
                                        ],
                                        "threshold": 1
                                    }
                                },
                                "spec_version": "1.0.31",
                                "version": 1
                            }
                        }
                    },
                    "settings": {
                        "roles": {
                            "bins": {
                                "expiration": 1,
                                "number_of_delegated_bins": 4
                            },
                            "root": {
                                "expiration": 365
                            },
                            "snapshot": {
                                "expiration": 1
                            },
                            "targets": {
                                "expiration": 365
                            },
                            "timestamp": {
                                "expiration": 1
                            }
                        }
                    }
                }
            },
            "BootstrapPostResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PostData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "BootstrapPostResponse",
                "example": {
                    "data": {
                        "last_update": "2022-12-01T12:10:00.578086",
                        "task_id": "7a634b556f784ae88785d36425f9a218"
                    },
                    "message": "Bootstrap accepted."
                }
            },
            "DelegationRolesData": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "DelegationRolesData"
            },
            "DelegationsData": {
                "properties": {
                    "roles": {
                        "items": {
                            "$ref": "#/components/schemas/DelegationRolesData"
                        },
                        "type": "array",
                        "title": "Roles"
                    }
                },
                "type": "object",
                "required": [
                    "roles"
                ],
                "title": "DelegationsData"
            },
            "DelegationsResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/repository_service_tuf_api__delegations__ResponseData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "DelegationsResponse",
                "example": {
                    "data": {
                        "last_update": "2022-12-01T12:10:00.578086",
                        "task_id": "7a634b556f784ae88785d36425f9a218"
                    }
                }
            },
            "DeletePayload": {
                "properties": {
                    "artifacts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Artifacts"
                    },
                    "publish_artifacts": {
                        "type": "boolean",
                        "title": "Publish Artifacts",
                        "description": "Whether to publish the artifacts changes",
                        "default": true
                    }
                },
                "type": "object",
                "required": [
                    "artifacts"
                ],
                "title": "DeletePayload",
                "description": "DELETE method required Payload.",
                "example": {
                    "artifacts": [
                        "v3.4.1/file-3.4.1.tar.gz",
                        "config-3.4.1.yaml",
                        "file1.tar.gz"
                    ]
                }
            },
            "GetData": {
                "properties": {
                    "bootstrap": {
                        "type": "boolean",
                        "title": "Bootstrap"
                    },
                    "state": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "State"
                    },
                    "id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "bootstrap"
                ],
                "title": "GetData"
            },
            "GetResponse": {
                "properties": {
                    "data": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Data"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "data",
                    "message"
                ],
                "title": "GetResponse",
                "example": {
                    "data": {
                        "bins_expiration": 1,
                        "bins_num_keys": 1,
                        "bins_threshold": 1,
                        "bootstrap": "82281613dba54b8ea88dc86211c77d0a",
                        "number_of_delegated_bins": 4,
                        "root_expiration": 365,
                        "root_num_keys": 2,
                        "root_threshold": 1,
                        "snapshot_expiration": 1,
                        "snapshot_num_keys": 1,
                        "snapshot_threshold": 1,
                        "targets_expiration": 365,
                        "targets_num_keys": 1,
                        "targets_online_key": true,
                        "targets_threshold": 1,
                        "timestamp_expiration": 1,
                        "timestamp_num_keys": 1,
                        "timestamp_threshold": 1
                    },
                    "message": "Current Settings"
                }
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "MetadataDelegationDeletePayload": {
                "properties": {
                    "delegations": {
                        "$ref": "#/components/schemas/DelegationsData"
                    }
                },
                "type": "object",
                "required": [
                    "delegations"
                ],
                "title": "MetadataDelegationDeletePayload",
                "example": {
                    "delegations": {
                        "roles": [
                            {
                                "name": "dev"
                            },
                            {
                                "name": "legacy"
                            }
                        ]
                    }
                }
            },
            "MetadataDelegationsPayload": {
                "properties": {
                    "delegations": {
                        "$ref": "#/components/schemas/TUFDelegations"
                    }
                },
                "type": "object",
                "required": [
                    "delegations"
                ],
                "title": "MetadataDelegationsPayload",
                "example": {
                    "delegations": {
                        "keys": {
                            "2f685fa7546f1856b123223ab086b3def14c89d24eef18f49c32508c2f60e241": {
                                "keytype": "rsa",
                                "keyval": {
                                    "public": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwhX6rioiL/cX5Ys32InF\nU52H8tL14QeX0tacZdb+AwcH6nIh97h3RSHvGD7Xy6uaMRmGldAnSVYwJHqoJ5j2\nynVzU/RFpr+6n8Ps0QFg5GmlEqZboFjLbS0bsRQcXXnqJNsVLEPT3ULvu1rFRbWz\nAMFjNtNNk5W/u0GEzXn3D03jIdhD8IKAdrTRf0VMD9TRCXLdMmEU2vkf1NVUnOTb\n/dRX5QA8TtBylVnouZknbavQ0J/pPlHLfxUgsKzodwDlJmbPG9BWwXqQCmP0DgOG\nNIZ1X281MOBaGbkNVEuntNjCSaQxQjfALVVU5NAfal2cwMINtqaoc7Wa+TWvpFEI\nWwIDAQAB\n-----END PUBLIC KEY-----\n"
                                },
                                "scheme": "rsassa-pss-sha256",
                                "x-rstuf-key-name": "JC"
                            },
                            "c6d8bf2e4f48b41ac2ce8eca21415ca8ef68c133b47fc33df03d4070a7e1e9cc": {
                                "keytype": "ed25519",
                                "keyval": {
                                    "public": "4f66dabebcf30628963786001984c0b75c175cdcf3bc4855933a2628f0cd0a0f"
                                },
                                "scheme": "ed25519",
                                "x-rstuf-key-name": "JH"
                            }
                        },
                        "roles": [
                            {
                                "keyids": [
                                    "c6d8bf2e4f48b41ac2ce8eca21415ca8ef68c133b47fc33df03d4070a7e1e9cc",
                                    "2f685fa7546f1856b123223ab086b3def14c89d24eef18f49c32508c2f60e241"
                                ],
                                "name": "tenant1-group1-policy",
                                "paths": [
                                    "tenant1/group1/policy/*"
                                ],
                                "terminating": true,
                                "threshold": 2,
                                "x-rstuf-expire-policy": 365
                            }
                        ]
                    }
                }
            },
            "MetadataOnlinePostPayload": {
                "properties": {
                    "roles": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Roles"
                    }
                },
                "type": "object",
                "required": [
                    "roles"
                ],
                "title": "MetadataOnlinePostPayload",
                "example": {
                    "roles": [
                        "targets",
                        "snapshot"
                    ]
                }
            },
            "MetadataOnlinePostResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/repository_service_tuf_api__metadata__ResponseData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "data",
                    "message"
                ],
                "title": "MetadataOnlinePostResponse",
                "example": {
                    "data": {
                        "last_update": "2022-12-01T12:10:00.578086",
                        "task_id": "7a634b556f784ae88785d36425f9a218"
                    },
                    "message": "Force new online metadata accepted."
                }
            },
            "MetadataPostPayload": {
                "properties": {
                    "metadata": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TUFMetadata-Input"
                        },
                        "propertyNames": {
                            "const": "root"
                        },
                        "type": "object",
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "required": [
                    "metadata"
                ],
                "title": "MetadataPostPayload",
                "example": {
                    "metadata": {
                        "root": {
                            "signatures": [
                                {
                                    "keyid": "c6d8bf2e4f48b41ac2ce8eca21415ca8ef68c133b47fc33df03d4070a7e1e9cc",
                                    "sig": "917046f9076eae41876be7c031be149aa2a960fd21f0d52f72128f55d9c423e2ec1632f98c96693dd801bd064e37efd6e5a5d32712fd5701a42099ece6b88c05"
                                },
                                {
                                    "keyid": "50d7e110ad65f3b2dba5c3cfc8c5ca259be9774cc26be3410044ffd4be3aa5f3",
                                    "sig": "3046022100e4590f8f82fd8166b37590250036d474a2f15e6e9979482fd59892b97b870b5b0221008f10b6affcf16d907ee27a41887cd360c26c9d3f7fd9fda2d23807d51c5c5822"
                                },
                                {
                                    "keyid": "2f685fa7546f1856b123223ab086b3def14c89d24eef18f49c32508c2f60e241",
                                    "sig": "72ebfe7ace89d79197923cd42a4e597db2fa8c3a357f8241958d619dfcb5380921cb03f226e11ac4c3ad45e9a73211d608bb94e821c7909812334905fc46ccab924bf36548e51438b409b03e58cabb121ec0383de083f0d12ed04cc6e37698bd0deb6382235a116cf49a4ec4584a40becf4e02fa17d36daddbd8db3c03fdacdd036c89180f6a9993a291c99b7d41862c9bdfd939a5fee4aa35392e5aa151babf7c35e8d02adf01523c1783de63a6849d277e8acf89674edffb66ccec4e27d4ee53cd29ea63ea1e4cbc7b4dd7ffb0de6c724eecd0eee8ebfe110aeaeb19c4fe4cca0b3fdb3cd1181209c5ece62c6a3934d6a80fa906c035bf9d12937f0f64b527"
                                }
                            ],
                            "signed": {
                                "_type": "root",
                                "consistent_snapshot": true,
                                "expires": "2025-12-31T23:59:59Z",
                                "keys": {
                                    "2f685fa7546f1856b123223ab086b3def14c89d24eef18f49c32508c2f60e241": {
                                        "keytype": "rsa",
                                        "keyval": {
                                            "public": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwhX6rioiL/cX5Ys32InF\nU52H8tL14QeX0tacZdb+AwcH6nIh97h3RSHvGD7Xy6uaMRmGldAnSVYwJHqoJ5j2\nynVzU/RFpr+6n8Ps0QFg5GmlEqZboFjLbS0bsRQcXXnqJNsVLEPT3ULvu1rFRbWz\nAMFjNtNNk5W/u0GEzXn3D03jIdhD8IKAdrTRf0VMD9TRCXLdMmEU2vkf1NVUnOTb\n/dRX5QA8TtBylVnouZknbavQ0J/pPlHLfxUgsKzodwDlJmbPG9BWwXqQCmP0DgOG\nNIZ1X281MOBaGbkNVEuntNjCSaQxQjfALVVU5NAfal2cwMINtqaoc7Wa+TWvpFEI\nWwIDAQAB\n-----END PUBLIC KEY-----\n"
                                        },
                                        "scheme": "rsassa-pss-sha256",
                                        "x-rstuf-key-name": "JoeCocker's Key"
                                    },
                                    "50d7e110ad65f3b2dba5c3cfc8c5ca259be9774cc26be3410044ffd4be3aa5f3": {
                                        "keytype": "ecdsa",
                                        "keyval": {
                                            "public": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEcLYSZyFGeKdWNt5dWFbnv6N9NyHC\noUNLcG6GZIxLwN8Q8MUdHdOOxGkDnyBRSJpIZ/r/oDECSTwfCYhdogweLA==\n-----END PUBLIC KEY-----\n"
                                        },
                                        "scheme": "ecdsa-sha2-nistp256",
                                        "x-rstuf-key-name": "JanisJoplin's Key"
                                    },
                                    "cb20fa1061dde8e6267e0bef0981766aaadae168e917030f7f26edc7a0bab9c2": {
                                        "keytype": "ecdsa",
                                        "keyval": {
                                            "public": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEpsXQqNQPymbXz9efGsDRNyifLujg\nYRSp/TWmVDVBlLF2Ia+bSZD2GU5iPGlKsIX129yvUu1qQ49kdATqiuB6ow==\n-----END PUBLIC KEY-----\n"
                                        },
                                        "scheme": "ecdsa-sha2-nistp256",
                                        "x-rstuf-key-name": "New Online Key",
                                        "x-rstuf-online-key-uri": "fn:cb20fa1061dde8e6267e0bef0981766aaadae168e917030f7f26edc7a0bab9c2"
                                    }
                                },
                                "roles": {
                                    "root": {
                                        "keyids": [
                                            "50d7e110ad65f3b2dba5c3cfc8c5ca259be9774cc26be3410044ffd4be3aa5f3",
                                            "2f685fa7546f1856b123223ab086b3def14c89d24eef18f49c32508c2f60e241"
                                        ],
                                        "threshold": 2
                                    },
                                    "snapshot": {
                                        "keyids": [
                                            "cb20fa1061dde8e6267e0bef0981766aaadae168e917030f7f26edc7a0bab9c2"
                                        ],
                                        "threshold": 1
                                    },
                                    "targets": {
                                        "keyids": [
                                            "cb20fa1061dde8e6267e0bef0981766aaadae168e917030f7f26edc7a0bab9c2"
                                        ],
                                        "threshold": 1
                                    },
                                    "timestamp": {
                                        "keyids": [
                                            "cb20fa1061dde8e6267e0bef0981766aaadae168e917030f7f26edc7a0bab9c2"
                                        ],
                                        "threshold": 1
                                    }
                                },
                                "spec_version": "1.0.31",
                                "version": 2
                            }
                        }
                    }
                }
            },
            "MetadataPostResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/repository_service_tuf_api__metadata__ResponseData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "MetadataPostResponse",
                "example": {
                    "data": {
                        "last_update": "2022-12-01T12:10:00.578086",
                        "task_id": "7a634b556f784ae88785d36425f9a218"
                    }
                }
            },
            "MetadataSignDeletePayload": {
                "properties": {
                    "role": {
                        "type": "string",
                        "title": "Role"
                    }
                },
                "type": "object",
                "required": [
                    "role"
                ],
                "title": "MetadataSignDeletePayload",
                "example": {
                    "role": "root"
                }
            },
            "MetadataSignDeleteResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/repository_service_tuf_api__metadata__ResponseData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "MetadataSignDeleteResponse",
                "example": {
                    "data": {
                        "last_update": "2022-12-01T12:10:00.578086",
                        "task_id": "7a634b556f784ae88785d36425f9a218"
                    },
                    "message": "Metadata delete sign accepted."
                }
            },
            "MetadataSignGetResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SigningData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "MetadataSignGetResponse",
                "example": {
                    "data": {
                        "metadata": {
                            "root": {
                                "signatures": [
                                    {
                                        "keyid": "c6d8bf2e4f48b41ac2ce8eca21415ca8ef68c133b47fc33df03d4070a7e1e9cc",
                                        "sig": "828a659bc34972504b9dab16bc44818b8a7d49ffee2a9021df6a6be4dd3b7a026d1f890b952303d1cf32dda90fbdf60e9fcfeb5f0af6498f0f55cad31c750a02"
                                    }
                                ],
                                "signed": {
                                    "_type": "root",
                                    "consistent_snapshot": true,
                                    "expires": "2025-12-31T23:59:59Z",
                                    "keys": {
                                        "0d9d3d4bad91c455bc03921daa95774576b86625ac45570d0cac025b08e65043": {
                                            "keytype": "rsa",
                                            "keyval": {
                                                "public": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwJNtmJy0bky0VZHhJoVw\nVR0oIto8ndLLicnaHPDUfFsv2dTP50uLiYuYhU/RLTh+PIMm9dU5gvfSQ0YIUFHO\nfdcDCBaMNYR9z9c9kvWkfgxP4H7cMdy9ev3yh4pL+ua64AT1598QxmF0RSp9p8P4\nUDPJC4XsgVz3kKeCSQAgz02MJ+KdHyTDP+rgOuWQfVL8bz53puMSSFojiaEJTmZQ\n7eBnI2n6UF6AAV6eo6Dc4cgPQLSjhDqcfoHCyk/AzpTQO5EV+ahofYmV/kQQtr7g\nz8MQXoKRwCbfIcWhPyfPNReOo7fqVK3uK3kkD1ouoNSr9DFRcnUbsX4QR/CQLcoP\nXwIDAQAB\n-----END PUBLIC KEY-----\n"
                                            },
                                            "scheme": "rsassa-pss-sha256",
                                            "x-rstuf-key-name": "Online Key",
                                            "x-rstuf-online-key-uri": "fn:0d9d3d4bad91c455bc03921daa95774576b86625ac45570d0cac025b08e65043"
                                        },
                                        "50d7e110ad65f3b2dba5c3cfc8c5ca259be9774cc26be3410044ffd4be3aa5f3": {
                                            "keytype": "ecdsa",
                                            "keyval": {
                                                "public": "-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEcLYSZyFGeKdWNt5dWFbnv6N9NyHC\noUNLcG6GZIxLwN8Q8MUdHdOOxGkDnyBRSJpIZ/r/oDECSTwfCYhdogweLA==\n-----END PUBLIC KEY-----\n"
                                            },
                                            "scheme": "ecdsa-sha2-nistp256",
                                            "x-rstuf-key-name": "JanisJoplin's Key"
                                        },
                                        "c6d8bf2e4f48b41ac2ce8eca21415ca8ef68c133b47fc33df03d4070a7e1e9cc": {
                                            "keytype": "ed25519",
                                            "keyval": {
                                                "public": "4f66dabebcf30628963786001984c0b75c175cdcf3bc4855933a2628f0cd0a0f"
                                            },
                                            "scheme": "ed25519",
                                            "x-rstuf-key-name": "JimiHendrix's Key"
                                        }
                                    },
                                    "roles": {
                                        "root": {
                                            "keyids": [
                                                "c6d8bf2e4f48b41ac2ce8eca21415ca8ef68c133b47fc33df03d4070a7e1e9cc",
                                                "50d7e110ad65f3b2dba5c3cfc8c5ca259be9774cc26be3410044ffd4be3aa5f3"
                                            ],
                                            "threshold": 2
                                        },
                                        "snapshot": {
                                            "keyids": [
                                                "0d9d3d4bad91c455bc03921daa95774576b86625ac45570d0cac025b08e65043"
                                            ],
                                            "threshold": 1
                                        },
                                        "targets": {
                                            "keyids": [
                                                "0d9d3d4bad91c455bc03921daa95774576b86625ac45570d0cac025b08e65043"
                                            ],
                                            "threshold": 1
                                        },
                                        "timestamp": {
                                            "keyids": [
                                                "0d9d3d4bad91c455bc03921daa95774576b86625ac45570d0cac025b08e65043"
                                            ],
                                            "threshold": 1
                                        }
                                    },
                                    "spec_version": "1.0.31",
                                    "version": 1
                                }
                            }
                        }
                    }
                }
            },
            "MetadataSignPostPayload": {
                "properties": {
                    "role": {
                        "type": "string",
                        "title": "Role"
                    },
                    "signature": {
                        "$ref": "#/components/schemas/TUFSignatures"
                    }
                },
                "type": "object",
                "required": [
                    "role",
                    "signature"
                ],
                "title": "MetadataSignPostPayload",
                "example": {
                    "role": "root",
                    "signature": {
                        "keyid": "2f685fa7546f1856b123223ab086b3def14c89d24eef18f49c32508c2f60e241",
                        "sig": "7561c1db8a1f5e27de475f6b1f8f0d6fff7f53957784f689d86cab9a76de2adf48c5e2573e81b6f5bda6c4b9fb6611df985f08d7d27e22e31c73833ec130b505b3da02a78c6b730a3ebf21b4878f4067ddbd153f8f498e5787f2e9fd29dd4564358795664b33572919fb2f2a22f25182d83da4e5109d5067198bb85e20bff1385a06821e93362dfbfbc1e1820965c8e555c228c27b2c4c697936c2036b163b2ce126c9dc936ed66c38cda504062bc88c017790ccb9c78fd6fcc06f329cfaf17dc4e72343c9de17b12fc699f894868bbfff5b8437939442dfd2887e0244038583ec6b9fd7f96247b6d45b3700c1b04028e04779870afb473782be9e422551a371"
                    }
                }
            },
            "PostData": {
                "properties": {
                    "task_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Task Id"
                    },
                    "last_update": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last Update"
                    }
                },
                "type": "object",
                "required": [
                    "last_update"
                ],
                "title": "PostData"
            },
            "PutData": {
                "properties": {
                    "task_id": {
                        "type": "string",
                        "title": "Task Id"
                    },
                    "last_update": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last Update"
                    }
                },
                "type": "object",
                "required": [
                    "task_id",
                    "last_update"
                ],
                "title": "PutData"
            },
            "PutPayload": {
                "properties": {
                    "settings": {
                        "$ref": "#/components/schemas/repository_service_tuf_api__config__Settings"
                    }
                },
                "type": "object",
                "required": [
                    "settings"
                ],
                "title": "PutPayload",
                "example": {
                    "settings": {
                        "expiration": {
                            "bins": 5,
                            "snapshot": 50,
                            "targets": 100,
                            "timestamp": 20
                        }
                    }
                }
            },
            "PutResponse": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PutData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "PutResponse",
                "example": {
                    "data": {
                        "last_update": "2022-12-01T12:10:00.578086",
                        "task_id": "06ee6db3cbab4b26be505352c2f2e2c3"
                    },
                    "message": "Settings successfully submitted."
                }
            },
            "Response": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/TasksData"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "Response",
                "example": {
                    "data": {
                        "result": {
                            "details": {
                                "added_artifacts": [
                                    "file1.tar.gz"
                                ],
                                "invalid_paths": [
                                    "invalid_file.tar.gz"
                                ],
                                "target_roles": [
                                    "bins-3"
                                ]
                            },
                            "last_update": "2023-11-17T09:54:15.762882",
                            "message": "Artifact(s) Added",
                            "status": true,
                            "task": "add_artifacts"
                        },
                        "state": "SUCCESS",
                        "task_id": "33e66671dcc84cdfa2535a1eb030104c"
                    },
                    "message": "Task state."
                }
            },
            "ResponsePostAdd": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/repository_service_tuf_api__artifacts__ResponseData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    }
                },
                "type": "object",
                "title": "ResponsePostAdd",
                "description": "Artifacts post new artifacts response",
                "example": {
                    "data": {
                        "artifacts": [
                            "file1.tar.gz",
                            "file2.tar.gz"
                        ],
                        "last_update": "2022-12-01T12:10:00.578086",
                        "task_id": "06ee6db3cbab4b26be505352c2f2e2c3"
                    },
                    "message": "New Artifact(s) successfully submitted."
                }
            },
            "ResponsePostDelete": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/repository_service_tuf_api__artifacts__ResponseData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    }
                },
                "type": "object",
                "title": "ResponsePostDelete",
                "description": "Artifacts post remove artifacts response",
                "example": {
                    "data": {
                        "artifacts": [
                            "file1.tar.gz",
                            "file2.tar.gz"
                        ],
                        "last_update": "2022-12-01T12:10:00.578086",
                        "task_id": "06ee6db3cbab4b26be505352c2f2e2c3"
                    },
                    "message": "Remove Artifact(s) successfully submitted."
                }
            },
            "ResponsePostPublish": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/repository_service_tuf_api__artifacts__ResponseData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message"
                    }
                },
                "type": "object",
                "title": "ResponsePostPublish",
                "description": "Artifacts post publish artifacts response",
                "example": {
                    "data": {
                        "artifacts": [],
                        "last_update": "2022-12-01T12:10:00.578086",
                        "task_id": "06ee6db3cbab4b26be505352c2f2e2c3"
                    },
                    "message": "Publish artifacts successfully submitted."
                }
            },
            "Role": {
                "properties": {
                    "expiration": {
                        "type": "integer",
                        "exclusiveMinimum": 0.0,
                        "title": "Expiration"
                    }
                },
                "type": "object",
                "required": [
                    "expiration"
                ],
                "title": "Role"
            },
            "RolesData-Input": {
                "properties": {
                    "root": {
                        "$ref": "#/components/schemas/Role"
                    },
                    "targets": {
                        "$ref": "#/components/schemas/Role"
                    },
                    "snapshot": {
                        "$ref": "#/components/schemas/Role"
                    },
                    "timestamp": {
                        "$ref": "#/components/schemas/Role"
                    },
                    "bins": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BinsRole"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "delegations": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TUFDelegations"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "root",
                    "targets",
                    "snapshot",
                    "timestamp"
                ],
                "title": "RolesData"
            },
            "RolesData-Output": {
                "properties": {
                    "root": {
                        "$ref": "#/components/schemas/TUFMetadata-Output"
                    },
                    "trusted_root": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TUFMetadata-Output"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "trusted_targets": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TUFMetadata-Output"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "root"
                ],
                "title": "RolesData"
            },
            "SigningData": {
                "properties": {
                    "metadata": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RolesData-Output"
                            },
                            {}
                        ],
                        "title": "Metadata"
                    }
                },
                "type": "object",
                "required": [
                    "metadata"
                ],
                "title": "SigningData"
            },
            "TUFDelegations": {
                "properties": {
                    "keys": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TUFKeys"
                        },
                        "type": "object",
                        "title": "Keys"
                    },
                    "roles": {
                        "items": {
                            "$ref": "#/components/schemas/TUFSignedDelegationsRoles"
                        },
                        "type": "array",
                        "title": "Roles"
                    }
                },
                "type": "object",
                "required": [
                    "keys",
                    "roles"
                ],
                "title": "TUFDelegations"
            },
            "TUFKeys": {
                "properties": {
                    "keytype": {
                        "type": "string",
                        "title": "Keytype"
                    },
                    "scheme": {
                        "type": "string",
                        "title": "Scheme"
                    },
                    "keyval": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "propertyNames": {
                            "enum": [
                                "public",
                                "issuer",
                                "identity"
                            ]
                        },
                        "type": "object",
                        "title": "Keyval"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "Use x-rstuf-key-name instead. Key Name"
                    },
                    "x-rstuf-key-name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "X-Rstuf-Key-Name",
                        "description": "Key Name"
                    },
                    "x-rstuf-online-key-uri": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "X-Rstuf-Online-Key-Uri",
                        "description": "Online Key URI"
                    }
                },
                "type": "object",
                "required": [
                    "keytype",
                    "scheme",
                    "keyval"
                ],
                "title": "TUFKeys"
            },
            "TUFMetadata-Input": {
                "properties": {
                    "signatures": {
                        "items": {
                            "$ref": "#/components/schemas/TUFSignatures"
                        },
                        "type": "array",
                        "title": "Signatures"
                    },
                    "signed": {
                        "$ref": "#/components/schemas/TUFSigned-Input"
                    }
                },
                "type": "object",
                "required": [
                    "signatures",
                    "signed"
                ],
                "title": "TUFMetadata"
            },
            "TUFMetadata-Output": {
                "properties": {
                    "signatures": {
                        "items": {
                            "$ref": "#/components/schemas/TUFSignatures"
                        },
                        "type": "array",
                        "title": "Signatures"
                    },
                    "signed": {
                        "$ref": "#/components/schemas/TUFSigned-Output"
                    }
                },
                "type": "object",
                "required": [
                    "signatures",
                    "signed"
                ],
                "title": "TUFMetadata"
            },
            "TUFSignatures": {
                "properties": {
                    "keyid": {
                        "type": "string",
                        "title": "Keyid"
                    },
                    "sig": {
                        "type": "string",
                        "title": "Sig"
                    },
                    "bundle": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bundle"
                    }
                },
                "type": "object",
                "required": [
                    "keyid",
                    "sig"
                ],
                "title": "TUFSignatures"
            },
            "TUFSigned-Input": {
                "properties": {
                    "_type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "version": {
                        "type": "integer",
                        "title": "Version"
                    },
                    "spec_version": {
                        "type": "string",
                        "title": "Spec Version"
                    },
                    "expires": {
                        "type": "string",
                        "title": "Expires"
                    },
                    "keys": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/TUFKeys"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Keys"
                    },
                    "consistent_snapshot": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Consistent Snapshot"
                    },
                    "roles": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/TUFSignedRoles"
                                },
                                "propertyNames": {
                                    "enum": [
                                        "root",
                                        "targets",
                                        "snapshot",
                                        "timestamp",
                                        "bins"
                                    ]
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Roles"
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/TUFSignedMetaFile"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Meta"
                    },
                    "targets": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Targets"
                    },
                    "delegations": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TUFSignedDelegations"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "required": [
                    "_type",
                    "version",
                    "spec_version",
                    "expires"
                ],
                "title": "TUFSigned"
            },
            "TUFSigned-Output": {
                "properties": {
                    "_type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "version": {
                        "type": "integer",
                        "title": "Version"
                    },
                    "spec_version": {
                        "type": "string",
                        "title": "Spec Version"
                    },
                    "expires": {
                        "type": "string",
                        "title": "Expires"
                    },
                    "keys": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/TUFKeys"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Keys"
                    },
                    "consistent_snapshot": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Consistent Snapshot"
                    },
                    "roles": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/TUFSignedRoles"
                                },
                                "propertyNames": {
                                    "enum": [
                                        "root",
                                        "targets",
                                        "snapshot",
                                        "timestamp",
                                        "bins"
                                    ]
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Roles"
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/TUFSignedMetaFile"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Meta"
                    },
                    "targets": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Targets"
                    },
                    "delegations": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TUFSignedDelegations"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "required": [
                    "_type",
                    "version",
                    "spec_version",
                    "expires"
                ],
                "title": "TUFSigned"
            },
            "TUFSignedDelegations": {
                "properties": {
                    "keys": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TUFKeys"
                        },
                        "type": "object",
                        "title": "Keys"
                    },
                    "roles": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/TUFSignedDelegationsRoles"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Roles"
                    },
                    "succinct_roles": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TUFSignedDelegationsSuccinctRoles"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "keys",
                    "roles",
                    "succinct_roles"
                ],
                "title": "TUFSignedDelegations"
            },
            "TUFSignedDelegationsRoles": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "terminating": {
                        "type": "boolean",
                        "title": "Terminating"
                    },
                    "keyids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Keyids"
                    },
                    "threshold": {
                        "type": "integer",
                        "title": "Threshold"
                    },
                    "paths": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "minItems": 1,
                        "title": "Paths"
                    },
                    "path_hash_prefixes": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Path Hash Prefixes"
                    },
                    "x-rstuf-expire-policy": {
                        "type": "integer",
                        "title": "X-Rstuf-Expire-Policy",
                        "description": "Expire Policy for the role"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "terminating",
                    "keyids",
                    "threshold",
                    "paths"
                ],
                "title": "TUFSignedDelegationsRoles"
            },
            "TUFSignedDelegationsSuccinctRoles": {
                "properties": {
                    "bit_length": {
                        "type": "integer",
                        "exclusiveMaximum": 15.0,
                        "exclusiveMinimum": 0.0,
                        "title": "Bit Length"
                    },
                    "name_prefix": {
                        "type": "string",
                        "title": "Name Prefix"
                    },
                    "keyids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Keyids"
                    },
                    "threshold": {
                        "type": "integer",
                        "title": "Threshold"
                    }
                },
                "type": "object",
                "required": [
                    "bit_length",
                    "name_prefix",
                    "keyids",
                    "threshold"
                ],
                "title": "TUFSignedDelegationsSuccinctRoles"
            },
            "TUFSignedMetaFile": {
                "properties": {
                    "version": {
                        "type": "integer",
                        "title": "Version"
                    }
                },
                "type": "object",
                "required": [
                    "version"
                ],
                "title": "TUFSignedMetaFile"
            },
            "TUFSignedRoles": {
                "properties": {
                    "keyids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Keyids"
                    },
                    "threshold": {
                        "type": "integer",
                        "title": "Threshold"
                    }
                },
                "type": "object",
                "required": [
                    "keyids",
                    "threshold"
                ],
                "title": "TUFSignedRoles"
            },
            "TaskName": {
                "type": "string",
                "enum": [
                    "add_artifacts",
                    "remove_artifacts",
                    "bootstrap",
                    "update_settings",
                    "publish_artifacts",
                    "metadata_update",
                    "metadata_delegation",
                    "sign_metadata",
                    "delete_sign_metadata"
                ],
                "title": "TaskName"
            },
            "TaskResult": {
                "properties": {
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message",
                        "description": "Result detail description"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error",
                        "description": "Error message"
                    },
                    "status": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Status",
                        "description": "Task result status. `True` Success | `False` Failure"
                    },
                    "task": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TaskName"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Task name by worker"
                    },
                    "last_update": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Update",
                        "description": "Last time task was updated"
                    },
                    "details": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Details",
                        "description": "Relevant result details"
                    }
                },
                "type": "object",
                "title": "TaskResult"
            },
            "TaskState": {
                "type": "string",
                "enum": [
                    "PENDING",
                    "RECEIVED",
                    "STARTED",
                    "SUCCESS",
                    "FAILURE",
                    "REVOKED",
                    "REJECTED",
                    "RETRY",
                    "IGNORED",
                    "ERRORED",
                    "PRE_RUN",
                    "RUNNING"
                ],
                "title": "TaskState"
            },
            "TasksData": {
                "properties": {
                    "task_id": {
                        "type": "string",
                        "title": "Task Id",
                        "description": "Task ID"
                    },
                    "state": {
                        "$ref": "#/components/schemas/TaskState",
                        "description": "The Celery task state.\n\n`PENDING`: Task state is unknown (assumed pending since you know the id).\n\n`RECEIVED`: Task received by a RSTUF Worker (only used in events).\n\n`SUCCESS`: Task succeeded.\n\n`STARTED`: Task started by a RSTUF Worker.\n\n`RUNNING`: Task is running on RSTUF Worker.\n\n`FAILURE`: Task failed (unexpected).\n\n`REVOKED`: Task revoked.\n\n`RETRY`: Task is waiting for retry.\n\n`ERRORED`: Task errored. RSTUF identified an error while processing the task.\n\n`REJECTED`: Task was rejected (only used in events).\n\n`IGNORED`: Task was ignored."
                    },
                    "result": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TaskResult"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Task result if available."
                    }
                },
                "type": "object",
                "required": [
                    "task_id",
                    "state"
                ],
                "title": "TasksData"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "repository_service_tuf_api__artifacts__ResponseData": {
                "properties": {
                    "artifacts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Artifacts"
                    },
                    "task_id": {
                        "type": "string",
                        "title": "Task Id"
                    },
                    "last_update": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last Update"
                    }
                },
                "type": "object",
                "required": [
                    "artifacts",
                    "task_id",
                    "last_update"
                ],
                "title": "ResponseData"
            },
            "repository_service_tuf_api__bootstrap__Settings": {
                "properties": {
                    "roles": {
                        "$ref": "#/components/schemas/RolesData-Input"
                    }
                },
                "type": "object",
                "required": [
                    "roles"
                ],
                "title": "Settings"
            },
            "repository_service_tuf_api__config__Settings": {
                "properties": {
                    "expiration": {
                        "additionalProperties": {
                            "type": "integer"
                        },
                        "type": "object",
                        "title": "Expiration"
                    }
                },
                "type": "object",
                "required": [
                    "expiration"
                ],
                "title": "Settings"
            },
            "repository_service_tuf_api__delegations__ResponseData": {
                "properties": {
                    "task_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Task Id"
                    },
                    "last_update": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last Update"
                    }
                },
                "type": "object",
                "required": [
                    "last_update"
                ],
                "title": "ResponseData"
            },
            "repository_service_tuf_api__metadata__ResponseData": {
                "properties": {
                    "task_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Task Id"
                    },
                    "last_update": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last Update"
                    }
                },
                "type": "object",
                "required": [
                    "last_update"
                ],
                "title": "ResponseData"
            }
        }
    }
}